;; **
;; ** Widgets config for EWW
;; ** Created by : @adi1090x
;; **

;; ** Variables ***********************************************************************

;; Time vars
;; (defpoll TIME :interval "5s" `date +\"%I:%M %p\"`)
(defpoll TIME :interval "5s" `date +\"%H:%M\"`)
(defpoll DATE :interval "5s" `date +\"%A, %B %d\"`)

;; Music vars
(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
;; (defpoll COVER :interval "1s" `scripts/music_info --cover`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)

;; Battery vars
(defpoll BATICON :interval "1m" `scripts/battery --icon`)
(defpoll BATPERC :interval "1m" `scripts/battery --perc`)

;; Volume vars
(defpoll VOLICON :interval "1s" `scripts/volume --icon`)
(defpoll VOLUME :interval "1s" `scripts/volume --get`)

;; Network
(defpoll WIFIICON :interval "10s" `scripts/check-network --icon`)
(defpoll NETSTAT :interval "10s" `scripts/check-network --stat`)

;; User
(defvar IMAGE "images/profile.jpg")
(defpoll USER :interval "10m" `whoami`)

(defvar eww "eww -c $HOME/.config/eww")
(defvar time_rev false)

;; ** Widgets *************************************************************************

(defwidget clock_module []
  (eventbox :onhover "${eww} update time_rev=true"
			  :onhoverlost "${eww} update time_rev=false"
    (box :class "dockbox" :space-evenly "false" :orientation "h" :spacing "3" 
      (label :text DATE :class "clock_time_class" )
	  (revealer :transition "slideleft"
			  :reveal time_rev
			  :duration "350ms"
  ))))

;; weather
(defwidget weather [] 
		(box :class "dockbox"
			(box :class "clockbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(label :class "time" :halign "start" :wrap "true" :limit-width 25 :text TIME)
				(label :class "date" :halign "start" :wrap "true" :limit-width 25 :text DATE))))

;; music
(defwidget music [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 16 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
                (box :class "musicbuttons" :orientation "h" :spacing 10 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
                    (button :style "background-image: url('images/icons/music/previous-button.png');" :class "trackbutton" :onclick "scripts/music_info --prev")
                    (button :style "background-image: url('${STATUS}');" :class "playbutton" :onclick "scripts/music_info --toggle")
                    (button :style "background-image: url('images/icons/music/next-button.png');" :class "trackbutton" :onclick "scripts/music_info --next"))
                (box :orientation "h" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
                    (box :class "musicbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
                        (label :class "song" :halign "start" :wrap "false" :limit-width 25 :text SONG)
                        (label :class "artist" :halign "start" :wrap "false" :limit-width 25 :text ARTIST)))
    )))

;; system
(defwidget system [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                (box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                    (box :style "background-image: url('${BATICON}');" :class "trayicon")
                        (label :class "infotext" :halign "start" :text BATPERC))
				(button :onclick "scripts/volume --toggle"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${VOLICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text VOLUME)))
				(button :onclick "scripts/widget_apps --nm"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${WIFIICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text NETSTAT)))
				(button :onclick "sidedar/toggle_sidebar"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${IMAGE}');" :class "face")
							(label :class "infotext" :halign "start" :text USER)))
        )))

;; ** Windows *************************************************************************
;; music
(defwindow music
           :monitor 0
           :geometry (geometry :x "0.6%"
                               :y "1%"
                               :width "18%"
                               :height "5%"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "6%" :side "top")
           :windowtype "dock"
           :wm-ignore false
(music))

;; music
(defwindow test
           :monitor 0
           :geometry (geometry :x "20%"
                               :y "1%"
                               :width "18%"
                               :height "5%"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "6%" :side "top")
           :windowtype "dock"
           :wm-ignore false
(clock_module))


;; weather
(defwindow weather
           :monitor 0
           :geometry (geometry :x "58.5%"
                               :y "1%"
                               :width "15%"
                               :height "5%"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "6%" :side "top")
           :windowtype "dock"
           :wm-ignore false
(weather))

;; system
(defwindow system
           :monitor 0
           :geometry (geometry :x "1420px"
                               :y "1%"
                               :width "480px"
                               :height "5%"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "6%" :side "top")
           :windowtype "dock"
           :wm-ignore false
(system))
